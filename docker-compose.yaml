version: "3.8"

services:
  kong-database:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/kong_data:/var/lib/postgresql/data
    networks:
      - kong-net

  kong-migrations:
    build: ./kong
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    command:
      [
        "/wait-for-it.sh",
        "kong-database:5432",
        "--",
        "kong",
        "migrations",
        "bootstrap",
      ]
    networks:
      - kong-net
    depends_on:
      - kong-database

  kong:
    build: ./kong
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_ADMIN_LISTEN: ${KONG_ADMIN_LISTEN}
    ports:
      - "${KONG_HTTP_PORT}:8000"
      - "${KONG_HTTPS_PORT}:8443"
      - "${KONG_ADMIN_HTTP_PORT}:8001"
      - "${KONG_ADMIN_HTTPS_PORT}:8444"
    networks:
      - kong-net
    depends_on:
      - kong-migrations

  neo4j:
    image: neo4j:5.12
    environment:
      NEO4J_AUTH: "neo4j/password"
    ports:
      - "${NEO4J_HOST_HTTP_PORT}:7474"
      - "${NEO4J_HOST_BOLT_PORT}:7687"
    networks:
      - kong-net
    volumes:
      - ./volumes/neo4j_data:/data
      - ./volumes/neo4j_logs:/logs

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "${RABBITMQ_HOST_AMQP_PORT}:5672"
      - "${RABBITMQ_HOST_ADMIN_PORT}:15672"
    networks:
      - kong-net
    volumes:
      - ./volumes/rabbitmq_data:/var/lib/rabbitmq

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_HOST_PORT}:27017"
    networks:
      - kong-net
    volumes:
      - ./volumes/mongo_data:/data/db

  routes-api:
    build:
      context: ./routes-api
      dockerfile: Dockerfile
    container_name: routes-api
    # ports:
    #   - "${ROUTES_API_PORT}:80"
    depends_on:
      - neo4j
    networks:
      - kong-net

  publisher-service:
    build:
      context: ./publisher-service
      dockerfile: Dockerfile
    container_name: publisher-service
    # ports:
    #   - "${PUBLISHER_SERVICE_PORT}:80"
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    command:
      [
        "/wait-for-it.sh",
        "rabbitmq:${RABBITMQ_HOST_AMQP_PORT}",
        "--",
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "80",
      ]
    depends_on:
      - rabbitmq
    networks:
      - kong-net

volumes:
  kong_data:
  neo4j_data:
  neo4j_logs:
  rabbitmq_data:
  mongo_data:

networks:
  kong-net:
    driver: bridge
